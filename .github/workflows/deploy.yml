name: DND Api CI/CD

on:
  push:
    branches: [ "master" ]

env:
  S3_BUCKET_NAME: dnd-deploy-bucket
  PROJECT_NAME: dnd-7th-9-backend

permissions:
  contents: read

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-latest
    
    # Task 의 sequence 를 명시
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        
      # Build
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

      - name: Make zip file
        run: zip -r -qq -j ./dnd-build.zip ./deploy
        shell: bash

      # S3 Bucket 으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \
          ./dnd-build.zip s3://dnd-deploy-bucket/

      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name dnd-system-deploy \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name develop \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=dnd-deploy-bucket,bundleType=zip,key=dnd-build.zip \
          --region ap-northeast-2
